{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2025-01-22T14:28:10.983Z",
    "end": "2025-01-22T14:28:11.146Z",
    "duration": 163,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b5ccb29b-e9a6-48d1-a033-e07b7959606b",
      "title": "",
      "fullFile": "C:\\Users\\E\\Desktop\\visions\\dev\\cca-ptx\\contract-agent\\src\\tests\\contract.agent.0.spec.ts",
      "file": "\\src\\tests\\contract.agent.0.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "377b693f-d6ac-4fc7-8af1-692c8b8e3d2f",
          "title": "Contract Agent Test Cases",
          "fullFile": "C:\\Users\\E\\Desktop\\visions\\dev\\cca-ptx\\contract-agent\\src\\tests\\contract.agent.0.spec.ts",
          "file": "\\src\\tests\\contract.agent.0.spec.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Contract Agent Test Cases\"",
              "fullTitle": "Contract Agent Test Cases \"before all\" hook in \"Contract Agent Test Cases\"",
              "timedOut": false,
              "duration": 35,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    Agent_1.Agent.setConfigPath('./mocks/contract-agent.config.json', __filename);\n    contractAgent = yield ContractAgent_1.ContractAgent.retrieveService();\n    contractProvider = contractAgent.getDataProvider('contracts');\n    updateProfileFromContractChangeSpy = sinon_1.default.spy(ContractAgent_1.ContractAgent.prototype, 'updateProfileFromContractChange');\n    updateProfilesForMembersSpy = sinon_1.default.spy(ContractAgent_1.ContractAgent.prototype, 'updateProfilesForMembers');\n    updateProfilesForServiceOfferingsSpy = sinon_1.default.spy(ContractAgent_1.ContractAgent.prototype, 'updateProfilesForServiceOfferings');\n    updateProfileForOrchestratorSpy = sinon_1.default.spy(ContractAgent_1.ContractAgent.prototype, 'updateProfileForOrchestrator');\n    updateProfileSpy = sinon_1.default.spy(ContractAgent_1.ContractAgent.prototype, 'updateProfile');\n});",
              "err": {},
              "uuid": "587b312d-dc63-4b9a-bfbc-2a01f09be927",
              "parentUUID": "377b693f-d6ac-4fc7-8af1-692c8b8e3d2f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Contract Agent Test Cases\"",
              "fullTitle": "Contract Agent Test Cases \"after all\" hook in \"Contract Agent Test Cases\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    updateProfileFromContractChangeSpy.restore();\n    updateProfilesForMembersSpy.restore();\n    updateProfilesForServiceOfferingsSpy.restore();\n    updateProfileForOrchestratorSpy.restore();\n    updateProfileSpy.restore();\n});",
              "err": {},
              "uuid": "786456e3-4e87-4079-99f4-f127ce5efc1e",
              "parentUUID": "377b693f-d6ac-4fc7-8af1-692c8b8e3d2f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should verify the flow for creating a contract and updating profiles",
              "fullTitle": "Contract Agent Test Cases should verify the flow for creating a contract and updating profiles",
              "timedOut": false,
              "duration": 118,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    createdDocument = yield contractProvider.create(contract_mock_1.ContractBase);\n    (0, chai_1.expect)(createdDocument).to.have.property('_id');\n    yield delay(100);\n    yield new Promise(setImmediate);\n    sinon_1.default.assert.calledOnce(updateProfileFromContractChangeSpy);\n    (0, chai_1.expect)(updateProfileFromContractChangeSpy.calledOnce).to.be.true;\n    sinon_1.default.assert.calledOnce(updateProfilesForMembersSpy);\n    sinon_1.default.assert.calledOnce(updateProfilesForServiceOfferingsSpy);\n    sinon_1.default.assert.calledOnce(updateProfileForOrchestratorSpy);\n    sinon_1.default.assert.callCount(updateProfileSpy, contract_mock_1.ContractBase.members.length + contract_mock_1.ContractBase.serviceOfferings.length + 1);\n});",
              "err": {},
              "uuid": "ba7561e8-5a54-43b9-9492-8f0572699aa0",
              "parentUUID": "377b693f-d6ac-4fc7-8af1-692c8b8e3d2f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete the previously created contract successfully",
              "fullTitle": "Contract Agent Test Cases should delete the previously created contract successfully",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    (0, chai_1.expect)(createdDocument).to.not.be.undefined;\n    const deleteResult = yield contractProvider.delete(createdDocument._id.toString());\n    (0, chai_1.expect)(deleteResult).to.be.true;\n    const secondDeleteResult = yield contractProvider.delete(createdDocument._id.toString());\n    (0, chai_1.expect)(secondDeleteResult).to.be.false;\n});",
              "err": {},
              "uuid": "c306b132-5ffb-41cb-aaac-a567a775f8c1",
              "parentUUID": "377b693f-d6ac-4fc7-8af1-692c8b8e3d2f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ba7561e8-5a54-43b9-9492-8f0572699aa0",
            "c306b132-5ffb-41cb-aaac-a567a775f8c1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 122,
          "root": false,
          "rootEmpty": false,
          "_timeout": 4000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 4000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "contract.agent.0.spec.ts",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report/contract",
        "reportFilename": "contract.agent.0.spec.ts"
      },
      "version": "6.2.0"
    }
  }
}
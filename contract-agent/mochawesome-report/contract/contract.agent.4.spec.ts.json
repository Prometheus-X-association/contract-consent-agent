{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2025-01-22T14:28:19.107Z",
    "end": "2025-01-22T14:28:20.597Z",
    "duration": 1490,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a2d5973a-cc9d-4cc3-a037-df718fbfc62a",
      "title": "",
      "fullFile": "C:\\Users\\E\\Desktop\\visions\\dev\\cca-ptx\\contract-agent\\src\\tests\\contract.agent.4.spec.ts",
      "file": "\\src\\tests\\contract.agent.4.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "df100d28-e84e-47c5-8376-767fa469898d",
          "title": "ContractAgent with MongooseProvider",
          "fullFile": "C:\\Users\\E\\Desktop\\visions\\dev\\cca-ptx\\contract-agent\\src\\tests\\contract.agent.4.spec.ts",
          "file": "\\src\\tests\\contract.agent.4.spec.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"ContractAgent with MongooseProvider\"",
              "fullTitle": "ContractAgent with MongooseProvider \"before all\" hook in \"ContractAgent with MongooseProvider\"",
              "timedOut": false,
              "duration": 41,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    Agent_1.Agent.setConfigPath('./mocks/contract-agent.config.json', __filename);\n    model = yield contract_model_mock_1.default.getModel();\n    agent = yield ContractAgent_1.ContractAgent.retrieveService(MongooseProvider_1.MongooseProvider);\n    updateProfileFromContractChangeSpy = sinon_1.default.spy(ContractAgent_1.ContractAgent.prototype, 'updateProfileFromContractChange');\n});",
              "err": {},
              "uuid": "ea75a52c-be6f-4efc-a33c-a2889a0d1740",
              "parentUUID": "df100d28-e84e-47c5-8376-767fa469898d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"ContractAgent with MongooseProvider\"",
              "fullTitle": "ContractAgent with MongooseProvider \"after all\" hook in \"ContractAgent with MongooseProvider\"",
              "timedOut": false,
              "duration": 1011,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    updateProfileFromContractChangeSpy.restore();\n    if (model) {\n        yield model.deleteMany({});\n    }\n    yield Promise.all([\n        mongoose_1.default.disconnect(),\n        new Promise((resolve) => setTimeout(resolve, 1000)),\n    ]);\n});",
              "err": {},
              "uuid": "8c52494e-d4a7-4a8b-a830-c118ccbb151b",
              "parentUUID": "df100d28-e84e-47c5-8376-767fa469898d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should initialize correctly and trigger handleDataInserted via create",
              "fullTitle": "ContractAgent with MongooseProvider should initialize correctly and trigger handleDataInserted via create",
              "timedOut": false,
              "duration": 162,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    yield model.create({\n        ecosystem: 'test-ecosystem',\n        serviceOfferings: [\n            {\n                participant: 'test-participant',\n                serviceOffering: 'allowed-service',\n                policies: [\n                    {\n                        description: 'allowed-policy',\n                        permission: [],\n                        prohibition: [],\n                    },\n                ],\n            },\n        ],\n        createdAt: new Date(),\n        updatedAt: new Date(),\n        members: [],\n        orchestrator: '',\n        purpose: [],\n        revokedMembers: [],\n        rolesAndObligations: [],\n    });\n    yield delay(100);\n    yield new Promise(setImmediate);\n    sinon_1.default.assert.calledOnce(updateProfileFromContractChangeSpy);\n});",
              "err": {},
              "uuid": "f4116c9e-0336-493c-a298-276820d6804d",
              "parentUUID": "df100d28-e84e-47c5-8376-767fa469898d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should initialize correctly and trigger handleDataInserted via save",
              "fullTitle": "ContractAgent with MongooseProvider should initialize correctly and trigger handleDataInserted via save",
              "timedOut": false,
              "duration": 124,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    const contract = new model();\n    updateProfileFromContractChangeSpy.resetHistory();\n    yield contract.save({\n        ecosystem: 'test-ecosystem',\n        serviceOfferings: [\n            {\n                participant: 'test-participant',\n                serviceOffering: 'allowed-service',\n                policies: [\n                    {\n                        description: 'allowed-policy',\n                        permission: [],\n                        prohibition: [],\n                    },\n                ],\n            },\n        ],\n        createdAt: new Date(),\n        updatedAt: new Date(),\n        members: [],\n        orchestrator: '',\n        purpose: [],\n        revokedMembers: [],\n        rolesAndObligations: [],\n    });\n    yield delay(100);\n    yield new Promise(setImmediate);\n    sinon_1.default.assert.calledOnce(updateProfileFromContractChangeSpy);\n});",
              "err": {},
              "uuid": "3de672a6-4e81-4cf5-8f55-b0577e486a5c",
              "parentUUID": "df100d28-e84e-47c5-8376-767fa469898d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should trigger updateProfileFromContractChange on update",
              "fullTitle": "ContractAgent with MongooseProvider should trigger updateProfileFromContractChange on update",
              "timedOut": false,
              "duration": 140,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    const doc = yield model.create({\n        ecosystem: 'test-ecosystem-update',\n        serviceOfferings: [\n            {\n                participant: 'test-participant-update',\n                serviceOffering: 'allowed-service',\n                policies: [\n                    { description: 'allowed-policy', permission: [], prohibition: [] },\n                ],\n            },\n        ],\n        members: [],\n        orchestrator: '',\n        purpose: [],\n        revokedMembers: [],\n        rolesAndObligations: [],\n    });\n    updateProfileFromContractChangeSpy.resetHistory();\n    yield model.findByIdAndUpdate(doc._id, {\n        $set: { ecosystem: 'updated-ecosystem' },\n    });\n    yield delay(100);\n    yield new Promise(setImmediate);\n    sinon_1.default.assert.calledOnce(updateProfileFromContractChangeSpy);\n});",
              "err": {},
              "uuid": "c69d6b50-1cc2-4bcc-a1bb-13a64811a2c5",
              "parentUUID": "df100d28-e84e-47c5-8376-767fa469898d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f4116c9e-0336-493c-a298-276820d6804d",
            "3de672a6-4e81-4cf5-8f55-b0577e486a5c",
            "c69d6b50-1cc2-4bcc-a1bb-13a64811a2c5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 426,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 4000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "contract.agent.4.spec.ts",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report/contract",
        "reportFilename": "contract.agent.4.spec.ts"
      },
      "version": "6.2.0"
    }
  }
}
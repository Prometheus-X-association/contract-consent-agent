{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2025-01-22T14:28:22.988Z",
    "end": "2025-01-22T14:28:23.053Z",
    "duration": 65,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "15577657-1b2e-42d8-8b97-aad76e65e416",
      "title": "",
      "fullFile": "C:\\Users\\E\\Desktop\\visions\\dev\\cca-ptx\\contract-agent\\src\\tests\\contract.dataprovider.0.spec.ts",
      "file": "\\src\\tests\\contract.dataprovider.0.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "413a5596-35b5-4f9c-b74d-220ab23c3848",
          "title": "DataProvider Events Test Cases",
          "fullFile": "C:\\Users\\E\\Desktop\\visions\\dev\\cca-ptx\\contract-agent\\src\\tests\\contract.dataprovider.0.spec.ts",
          "file": "\\src\\tests\\contract.dataprovider.0.spec.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"DataProvider Events Test Cases\"",
              "fullTitle": "DataProvider Events Test Cases \"before all\" hook in \"DataProvider Events Test Cases\"",
              "timedOut": false,
              "duration": 33,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    const config = {\n        url: 'mongodb://localhost:27017',\n        dbName: 'contract_consent_agent_db',\n        source: collection,\n    };\n    mongoProvider = new MongoDBProvider_1.MongoDBProvider(config);\n    yield mongoProvider.ensureReady();\n    agentTest = new AgentTest(mongoProvider);\n});",
              "err": {},
              "uuid": "f129ce4b-bc2e-4965-9f09-7b491289299b",
              "parentUUID": "413a5596-35b5-4f9c-b74d-220ab23c3848",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"DataProvider Events Test Cases\"",
              "fullTitle": "DataProvider Events Test Cases \"after each\" hook in \"DataProvider Events Test Cases\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "agentTest.handleDataInsertedSpy.resetHistory();\nagentTest.handleDataUpdatedSpy.resetHistory();\nagentTest.handleDataDeletedSpy.resetHistory();",
              "err": {},
              "uuid": "6fe332ae-a0fe-41b2-93ed-dfe7fb21eb15",
              "parentUUID": "413a5596-35b5-4f9c-b74d-220ab23c3848",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should emit dataInserted event when creating a document",
              "fullTitle": "DataProvider Events Test Cases should emit dataInserted event when creating a document",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    const testData = { name: 'test', value: 123 };\n    const result = yield mongoProvider.create(testData);\n    (0, chai_1.expect)(agentTest.handleDataInsertedSpy.calledOnce).to.be.true;\n    const eventData = agentTest.handleDataInsertedSpy.firstCall.args[0];\n    (0, chai_1.expect)(eventData).to.have.property('source', collection);\n    (0, chai_1.expect)(eventData).to.have.property('fullDocument');\n    (0, chai_1.expect)(eventData.fullDocument).to.include(testData);\n    if (result._id) {\n        yield mongoProvider.delete(result._id.toString());\n    }\n});",
              "err": {},
              "uuid": "aa327e65-b0f3-4f09-a4af-060b3d6f2cee",
              "parentUUID": "413a5596-35b5-4f9c-b74d-220ab23c3848",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should emit dataUpdated event when updating a document",
              "fullTitle": "DataProvider Events Test Cases should emit dataUpdated event when updating a document",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    const testData = { name: 'test-update', value: 456 };\n    const created = yield mongoProvider.create(testData);\n    agentTest.handleDataInsertedSpy.resetHistory();\n    const updateData = { value: 789 };\n    const criteria = {\n        conditions: [\n            {\n                field: '_id',\n                operator: types_1.FilterOperator.EQUALS,\n                value: created._id,\n            },\n        ],\n        threshold: 0,\n    };\n    yield mongoProvider.update(criteria, updateData);\n    (0, chai_1.expect)(agentTest.handleDataUpdatedSpy.calledOnce).to.be.true;\n    const eventData = agentTest.handleDataUpdatedSpy.firstCall.args[0];\n    (0, chai_1.expect)(eventData).to.have.property('source', collection);\n    (0, chai_1.expect)(eventData).to.have.property('documentKey');\n    (0, chai_1.expect)(eventData).to.have.property('updateDescription');\n    if (created._id) {\n        yield mongoProvider.delete(created._id.toString());\n    }\n});",
              "err": {},
              "uuid": "3f3aac91-cb6c-4a3b-a82c-589556e04657",
              "parentUUID": "413a5596-35b5-4f9c-b74d-220ab23c3848",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should emit dataDeleted event when deleting a document",
              "fullTitle": "DataProvider Events Test Cases should emit dataDeleted event when deleting a document",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    const testData = { name: 'test-delete', value: 999 };\n    const created = yield mongoProvider.create(testData);\n    agentTest.handleDataInsertedSpy.resetHistory();\n    if (created._id) {\n        yield mongoProvider.delete(created._id.toString());\n    }\n    (0, chai_1.expect)(agentTest.handleDataDeletedSpy.calledOnce).to.be.true;\n    const eventData = agentTest.handleDataDeletedSpy.firstCall.args[0];\n    (0, chai_1.expect)(eventData).to.have.property('source', collection);\n    (0, chai_1.expect)(eventData).to.have.property('documentKey');\n});",
              "err": {},
              "uuid": "1313fa5c-d011-4d11-a850-68720004226a",
              "parentUUID": "413a5596-35b5-4f9c-b74d-220ab23c3848",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aa327e65-b0f3-4f09-a4af-060b3d6f2cee",
            "3f3aac91-cb6c-4a3b-a82c-589556e04657",
            "1313fa5c-d011-4d11-a850-68720004226a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 24,
          "root": false,
          "rootEmpty": false,
          "_timeout": 4000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 4000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "contract.dataprovider.0.spec.ts",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report/contract",
        "reportFilename": "contract.dataprovider.0.spec.ts"
      },
      "version": "6.2.0"
    }
  }
}